import { BaseAsset, Context, Namespace } from "../../../../../internal";
import { ModifyAssetTrustedClaimIssuersAddSetParams, ModifyAssetTrustedClaimIssuersRemoveParams, ProcedureMethod, SubCallback, TrustedClaimIssuer, UnsubCallback } from "../../../../../types";
/**
 * Handles all Asset Default Trusted Claim Issuers related functionality
 */
export declare class TrustedClaimIssuers extends Namespace<BaseAsset> {
    /**
     * @hidden
     */
    constructor(parent: BaseAsset, context: Context);
    /**
     * Assign a new default list of trusted claim issuers to the Asset by replacing the existing ones with the list passed as a parameter
     *
     * This requires two transactions
     */
    set: ProcedureMethod<ModifyAssetTrustedClaimIssuersAddSetParams, void>;
    /**
     * Add the supplied Identities to the Asset's list of trusted claim issuers
     */
    add: ProcedureMethod<ModifyAssetTrustedClaimIssuersAddSetParams, void>;
    /**
     * Remove the supplied Identities from the Asset's list of trusted claim issuers   *
     */
    remove: ProcedureMethod<ModifyAssetTrustedClaimIssuersRemoveParams, void>;
    /**
     * Retrieve the current Default Trusted Claim Issuers of the Asset
     *
     * @note can be subscribed to
     */
    get(): Promise<TrustedClaimIssuer<true>[]>;
    get(callback: SubCallback<TrustedClaimIssuer<true>[]>): Promise<UnsubCallback>;
}
//# sourceMappingURL=TrustedClaimIssuers.d.ts.map