import BigNumber from 'bignumber.js';
import { Context, FungibleAsset, Namespace, Offering } from "../../../../../internal";
import { LaunchOfferingParams, OfferingStatus, OfferingWithDetails, ProcedureMethod } from "../../../../../types";
/**
 * Handles all Asset Offering related functionality
 */
export declare class Offerings extends Namespace<FungibleAsset> {
    /**
     * @hidden
     */
    constructor(parent: FungibleAsset, context: Context);
    /**
     * Launch an Asset Offering
     *
     * @note required roles:
     *   - Offering Portfolio Custodian
     *   - Raising Portfolio Custodian
     */
    launch: ProcedureMethod<LaunchOfferingParams, Offering>;
    /**
     * Retrieve a single Offering associated to this Asset by its ID
     *
     * @throws if there is no Offering with the passed ID
     */
    getOne(args: {
        id: BigNumber;
    }): Promise<Offering>;
    /**
     * Retrieve all of the Asset's Offerings and their details. Can be filtered using parameters
     *
     * @param opts.status - status of the Offerings to fetch. If defined, only Offerings that have all passed statuses will be returned
     */
    get(opts?: {
        status?: Partial<OfferingStatus>;
    }): Promise<OfferingWithDetails[]>;
}
//# sourceMappingURL=index.d.ts.map