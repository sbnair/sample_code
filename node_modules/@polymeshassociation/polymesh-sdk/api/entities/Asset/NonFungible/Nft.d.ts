import BigNumber from 'bignumber.js';
import { Context, Entity, NftCollection } from "../../../../internal";
import { NftMetadata } from "../../../../types";
export declare type NftUniqueIdentifiers = {
    ticker: string;
    id: BigNumber;
};
export interface HumanReadable {
    id: string;
    collection: string;
}
/**
 * Class used to manage Nft functionality
 */
export declare class Nft extends Entity<NftUniqueIdentifiers, HumanReadable> {
    id: BigNumber;
    collection: NftCollection;
    /**
     * @hidden
     * Check if a value is of type {@link UniqueIdentifiers}
     */
    static isUniqueIdentifiers(identifier: unknown): identifier is NftUniqueIdentifiers;
    /**
     * @hidden
     */
    constructor(identifiers: NftUniqueIdentifiers, context: Context);
    /**
     * Get metadata associated with this token
     */
    getMetadata(): Promise<NftMetadata[]>;
    /**
     * Determine if the NFT exists on chain
     *
     * @note This method returns true, even if the token has been redeemed/burned
     */
    exists(): Promise<boolean>;
    /**
     * @hidden
     */
    toHuman(): HumanReadable;
}
//# sourceMappingURL=Nft.d.ts.map