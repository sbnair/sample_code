import BigNumber from 'bignumber.js';
import { Context, CorporateActionBase } from "../../internal";
import { CorporateActionKind, CorporateActionTargets, ModifyCaCheckpointParams, ProcedureMethod, TaxWithholding } from "../../types";
import { HumanReadableType } from "../../types/utils";
export interface UniqueIdentifiers {
    id: BigNumber;
    ticker: string;
}
export interface HumanReadable {
    id: string;
    ticker: string;
    declarationDate: string;
    description: string;
    targets: HumanReadableType<CorporateActionTargets>;
    defaultTaxWithholding: string;
    taxWithholdings: HumanReadableType<TaxWithholding[]>;
}
export interface Params {
    kind: CorporateActionKind;
    declarationDate: Date;
    description: string;
    targets: CorporateActionTargets;
    defaultTaxWithholding: BigNumber;
    taxWithholdings: TaxWithholding[];
}
/**
 * Represents an action initiated by the issuer of an Asset which may affect the positions of
 *   the Asset Holders
 */
export declare class CorporateAction extends CorporateActionBase {
    /**
     * @hidden
     */
    constructor(args: UniqueIdentifiers & Params, context: Context);
    /**
     * Modify the Corporate Action's Checkpoint
     */
    modifyCheckpoint: ProcedureMethod<ModifyCaCheckpointParams, void>;
}
//# sourceMappingURL=CorporateAction.d.ts.map