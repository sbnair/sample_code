import BigNumber from 'bignumber.js';
import { Context, PermissionGroup } from "../../internal";
import { GroupPermissions, ProcedureMethod, SetGroupPermissionsParams } from "../../types";
export interface HumanReadable {
    id: string;
    ticker: string;
}
export interface UniqueIdentifiers {
    id: BigNumber;
    ticker: string;
}
/**
 * Represents a group of custom permissions for an Asset
 */
export declare class CustomPermissionGroup extends PermissionGroup {
    /**
     * @hidden
     * Check if a value is of type {@link UniqueIdentifiers}
     */
    static isUniqueIdentifiers(identifier: unknown): identifier is UniqueIdentifiers;
    id: BigNumber;
    /**
     * @hidden
     */
    constructor(identifiers: UniqueIdentifiers, context: Context);
    /**
     * Modify the group's permissions
     */
    setPermissions: ProcedureMethod<SetGroupPermissionsParams, void>;
    /**
     * Retrieve the list of permissions and transaction groups associated with this Permission Group
     */
    getPermissions(): Promise<GroupPermissions>;
    /**
     * Determine whether this Custom Permission Group exists on chain
     */
    exists(): Promise<boolean>;
    /**
     * Return the Group's static data
     */
    toHuman(): HumanReadable;
}
//# sourceMappingURL=CustomPermissionGroup.d.ts.map