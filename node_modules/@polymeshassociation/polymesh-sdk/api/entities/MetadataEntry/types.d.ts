import BigNumber from 'bignumber.js';
export declare enum MetadataType {
    Local = "Local",
    Global = "Global"
}
export declare enum MetadataLockStatus {
    Unlocked = "Unlocked",
    Locked = "Locked",
    LockedUntil = "LockedUntil"
}
export interface MetadataSpec {
    url?: string;
    description?: string;
    typeDef?: string;
}
export interface MetadataDetails {
    name: string;
    specs: MetadataSpec;
}
export declare type MetadataValueDetails = {
    /**
     * Date at which the Metadata value expires, null if it never expires
     */
    expiry: Date | null;
} & ({
    /**
     * Lock status of the Metadata value
     */
    lockStatus: Exclude<MetadataLockStatus, MetadataLockStatus.LockedUntil>;
} | {
    /**
     * Lock status of the Metadata value
     */
    lockStatus: MetadataLockStatus.LockedUntil;
    /**
     * Date till which the Metadata value will be locked
     */
    lockedUntil: Date;
});
export declare type MetadataValue = {
    value: string;
} & MetadataValueDetails;
export declare type GlobalMetadataKey = MetadataDetails & {
    id: BigNumber;
};
//# sourceMappingURL=types.d.ts.map