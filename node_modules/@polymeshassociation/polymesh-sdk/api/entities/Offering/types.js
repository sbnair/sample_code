"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OfferingSaleStatus = exports.OfferingBalanceStatus = exports.OfferingTimingStatus = void 0;
var OfferingTimingStatus;
(function (OfferingTimingStatus) {
    /**
     * Start date not reached yet
     */
    OfferingTimingStatus["NotStarted"] = "NotStarted";
    /**
     * Between start and end date
     */
    OfferingTimingStatus["Started"] = "Started";
    /**
     * End date reached
     */
    OfferingTimingStatus["Expired"] = "Expired";
})(OfferingTimingStatus = exports.OfferingTimingStatus || (exports.OfferingTimingStatus = {}));
var OfferingBalanceStatus;
(function (OfferingBalanceStatus) {
    /**
     * There still are Asset tokens available for purchase
     */
    OfferingBalanceStatus["Available"] = "Available";
    /**
     * All Asset tokens in the Offering have been sold
     */
    OfferingBalanceStatus["SoldOut"] = "SoldOut";
    /**
     * There are remaining Asset tokens, but their added value is lower than the Offering's
     *   minimum investment, so they cannot be purchased. The Offering should be manually closed
     *   to retrieve them
     */
    OfferingBalanceStatus["Residual"] = "Residual";
})(OfferingBalanceStatus = exports.OfferingBalanceStatus || (exports.OfferingBalanceStatus = {}));
var OfferingSaleStatus;
(function (OfferingSaleStatus) {
    /**
     * Sale temporarily paused, can be resumed (unfrozen)
     */
    OfferingSaleStatus["Frozen"] = "Frozen";
    /**
     * Investments can be made
     */
    OfferingSaleStatus["Live"] = "Live";
    /**
     * Sale was manually closed before the end date was reached
     */
    OfferingSaleStatus["ClosedEarly"] = "ClosedEarly";
    /**
     * Sale was manually closed after the end date was reached
     */
    OfferingSaleStatus["Closed"] = "Closed";
})(OfferingSaleStatus = exports.OfferingSaleStatus || (exports.OfferingSaleStatus = {}));
//# sourceMappingURL=types.js.map