import { AuthorizationRequest, Procedure } from "../../internal";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export interface ConsumeAddMultiSigSignerAuthorizationParams {
    authRequest: AuthorizationRequest;
    accept: boolean;
}
/**
 * @hidden
 */
export declare function prepareConsumeAddMultiSigSignerAuthorization(this: Procedure<ConsumeAddMultiSigSignerAuthorizationParams>, args: ConsumeAddMultiSigSignerAuthorizationParams): Promise<TransactionSpec<void, ExtrinsicParams<'identity', 'removeAuthorization'>> | TransactionSpec<void, ExtrinsicParams<'multiSig', 'acceptMultisigSignerAsIdentity'>> | TransactionSpec<void, ExtrinsicParams<'multiSig', 'acceptMultisigSignerAsKey'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<ConsumeAddMultiSigSignerAuthorizationParams>, { authRequest, accept }: ConsumeAddMultiSigSignerAuthorizationParams): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare const consumeAddMultiSigSignerAuthorization: () => Procedure<ConsumeAddMultiSigSignerAuthorizationParams>;
//# sourceMappingURL=consumeAddMultiSigSignerAuthorization.d.ts.map