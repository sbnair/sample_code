import { Procedure } from "../../internal";
import { ControllerTransferParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
export interface Storage {
    did: string;
}
/**
 * @hidden
 */
export declare type Params = {
    ticker: string;
} & ControllerTransferParams;
/**
 * @hidden
 */
export declare function prepareControllerTransfer(this: Procedure<Params, void, Storage>, args: Params): Promise<TransactionSpec<void, ExtrinsicParams<'asset', 'controllerTransfer'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void, Storage>, { ticker }: Params): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<Params, void, Storage>): Promise<Storage>;
/**
 * @hidden
 */
export declare const controllerTransfer: () => Procedure<Params, void, Storage>;
//# sourceMappingURL=controllerTransfer.d.ts.map