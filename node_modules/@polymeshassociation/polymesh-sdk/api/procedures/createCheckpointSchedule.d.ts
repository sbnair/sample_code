import { ISubmittableResult } from '@polkadot/types/types';
import { CheckpointSchedule, Context, Procedure } from "../../internal";
import { CreateCheckpointScheduleParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export declare type Params = CreateCheckpointScheduleParams & {
    ticker: string;
};
/**
 * @hidden
 */
export declare const createCheckpointScheduleResolver: (ticker: string, context: Context) => (receipt: ISubmittableResult) => CheckpointSchedule;
/**
 * @hidden
 */
export declare function prepareCreateCheckpointSchedule(this: Procedure<Params, CheckpointSchedule>, args: Params): Promise<TransactionSpec<CheckpointSchedule, ExtrinsicParams<'checkpoint', 'createSchedule'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, CheckpointSchedule>, { ticker }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const createCheckpointSchedule: () => Procedure<Params, CheckpointSchedule>;
//# sourceMappingURL=createCheckpointSchedule.d.ts.map