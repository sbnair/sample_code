import { Procedure, Subsidy } from "../../internal";
import { DecreaseAllowanceParams, IncreaseAllowanceParams, SetAllowanceParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
export declare type ModifyAllowanceParams = (IncreaseAllowanceParams | DecreaseAllowanceParams | SetAllowanceParams) & {
    subsidy: Subsidy;
};
/**
 * @hidden
 */
export declare function prepareModifyAllowance(this: Procedure<ModifyAllowanceParams, void>, args: ModifyAllowanceParams): Promise<TransactionSpec<void, ExtrinsicParams<'relayer', 'updatePolyxLimit' | 'decreasePolyxLimit' | 'increasePolyxLimit'>>>;
/**
 * @hidden
 *
 * To modify the allowance for a Subsidy, the caller must be the subsidizer
 */
export declare function getAuthorization(this: Procedure<ModifyAllowanceParams, void>, args: ModifyAllowanceParams): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const modifyAllowance: () => Procedure<ModifyAllowanceParams, void>;
//# sourceMappingURL=modifyAllowance.d.ts.map