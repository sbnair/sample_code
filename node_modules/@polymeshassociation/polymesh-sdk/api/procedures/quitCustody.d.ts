import { DefaultPortfolio, NumberedPortfolio, Procedure } from "../../internal";
import { PortfolioId } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export declare type Params = {
    portfolio: DefaultPortfolio | NumberedPortfolio;
};
export interface Storage {
    portfolioId: PortfolioId;
}
/**
 * @hidden
 */
export declare function prepareQuitCustody(this: Procedure<Params, void, Storage>, args: Params): Promise<TransactionSpec<void, ExtrinsicParams<'portfolio', 'quitPortfolioCustody'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void, Storage>, { portfolio }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<Params, void, Storage>, { portfolio }: Params): Promise<Storage>;
/**
 * @hidden
 */
export declare const quitCustody: () => Procedure<Params, void, Storage>;
//# sourceMappingURL=quitCustody.d.ts.map