import { FungibleAsset, Procedure } from "../../internal";
import { RemoveExternalAgentParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export declare type Params = RemoveExternalAgentParams & {
    ticker: string;
};
/**
 * @hidden
 */
export interface Storage {
    asset: FungibleAsset;
}
/**
 * @hidden
 */
export declare function prepareRemoveExternalAgent(this: Procedure<Params, void, Storage>, args: Params): Promise<TransactionSpec<void, ExtrinsicParams<'externalAgents', 'removeAgent'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void, Storage>): ProcedureAuthorization;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<Params, void, Storage>, { ticker }: Params): Storage;
/**
 * @hidden
 */
export declare const removeExternalAgent: () => Procedure<Params, void, Storage>;
//# sourceMappingURL=removeExternalAgent.d.ts.map