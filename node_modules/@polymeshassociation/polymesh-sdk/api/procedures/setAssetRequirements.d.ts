import { Procedure } from "../../internal";
import { SetAssetRequirementsParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export declare type Params = SetAssetRequirementsParams & {
    ticker: string;
};
/**
 * @hidden
 */
export declare function prepareSetAssetRequirements(this: Procedure<Params, void>, args: Params): Promise<TransactionSpec<void, ExtrinsicParams<'complianceManager', 'resetAssetCompliance'>> | TransactionSpec<void, ExtrinsicParams<'complianceManager', 'replaceAssetCompliance'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void>, { ticker, requirements }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const setAssetRequirements: () => Procedure<Params, void>;
//# sourceMappingURL=setAssetRequirements.d.ts.map