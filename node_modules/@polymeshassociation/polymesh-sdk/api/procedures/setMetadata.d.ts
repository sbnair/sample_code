import { MetadataEntry, Procedure } from "../../internal";
import { SetMetadataParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export declare type Params = SetMetadataParams & {
    metadataEntry: MetadataEntry;
};
/**
 * @hidden
 */
export declare function prepareSetMetadata(this: Procedure<Params, MetadataEntry>, params: Params): Promise<TransactionSpec<MetadataEntry, ExtrinsicParams<'assets', 'setAssetMetadata'>> | TransactionSpec<MetadataEntry, ExtrinsicParams<'assets', 'setAssetMetadataDetails'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, MetadataEntry>, params: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const setMetadata: () => Procedure<Params, MetadataEntry>;
//# sourceMappingURL=setMetadata.d.ts.map