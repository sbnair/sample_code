import { Procedure } from "../../internal";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
export interface ToggleFreezeSecondaryAccountsParams {
    freeze: boolean;
}
/**
 * @hidden
 */
export declare function prepareToggleFreezeSecondaryAccounts(this: Procedure<ToggleFreezeSecondaryAccountsParams, void>, args: ToggleFreezeSecondaryAccountsParams): Promise<TransactionSpec<void, ExtrinsicParams<'identity', 'freezeSecondaryKeys'>> | TransactionSpec<void, ExtrinsicParams<'identity', 'unfreezeSecondaryKeys'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<ToggleFreezeSecondaryAccountsParams, void>, { freeze }: ToggleFreezeSecondaryAccountsParams): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const toggleFreezeSecondaryAccounts: () => Procedure<ToggleFreezeSecondaryAccountsParams, void>;
//# sourceMappingURL=toggleFreezeSecondaryAccounts.d.ts.map