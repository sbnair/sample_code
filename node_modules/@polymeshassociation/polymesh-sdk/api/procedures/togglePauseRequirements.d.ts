import { Procedure } from "../../internal";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
export interface TogglePauseRequirementsParams {
    pause: boolean;
}
/**
 * @hidden
 */
export declare type Params = TogglePauseRequirementsParams & {
    ticker: string;
};
/**
 * @hidden
 */
export declare function prepareTogglePauseRequirements(this: Procedure<Params, void>, args: Params): Promise<TransactionSpec<void, ExtrinsicParams<'complianceManager', 'pauseAssetCompliance'>> | TransactionSpec<void, ExtrinsicParams<'complianceManager', 'resumeAssetCompliance'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<Params, void>, { ticker, pause }: Params): ProcedureAuthorization;
/**
 * @hidden
 */
export declare const togglePauseRequirements: () => Procedure<Params, void>;
//# sourceMappingURL=togglePauseRequirements.d.ts.map