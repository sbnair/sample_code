import { Identity, Procedure } from "../../internal";
import { UnlinkChildParams } from "../../types";
import { ExtrinsicParams, ProcedureAuthorization, TransactionSpec } from "../../types/internal";
/**
 * @hidden
 */
export interface Storage {
    identity: Identity;
}
/**
 * @hidden
 */
export declare function prepareUnlinkChildIdentity(this: Procedure<UnlinkChildParams, void, Storage>, args: UnlinkChildParams): Promise<TransactionSpec<void, ExtrinsicParams<'identity', 'unlinkChildIdentity'>>>;
/**
 * @hidden
 */
export declare function getAuthorization(this: Procedure<UnlinkChildParams, void, Storage>): Promise<ProcedureAuthorization>;
/**
 * @hidden
 */
export declare function prepareStorage(this: Procedure<UnlinkChildParams, void, Storage>): Promise<Storage>;
/**
 * @hidden
 */
export declare const unlinkChildIdentity: () => Procedure<UnlinkChildParams, void, Storage>;
//# sourceMappingURL=unlinkChildIdentity.d.ts.map